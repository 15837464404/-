解析 ：   调用目标在程序代码写好，编译器进行编译时就必须确定下来，这类方法的调用称为解析。主要包括静态方法和私有方法两大类。

静态分派：
Human man = new Man()
上面代码中的“Human”称为变量的静态类型，或者叫做外观类型，后面的“Man”则称为变量的实际类型，静态类型和实际类型都可以在程序中发生一些变化，
区别是静态类型的变化仅仅在使用时发生，变量本身的静态类型不会被改变，并且最终的静态类型在编译器是可知的，而实际类型的结果在运行期才可确定，
编译器在编译程序的时候并不知道一个对象的实际类型是什么。
依赖静态类型来定位方法执行版本的分派动作称为静态分派。静态分派的典型应用就是方法的重载，静态分派发生在编译阶段。
