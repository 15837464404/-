
栈 ：    每个线程有自己的独立线程栈，用于存储栈帧
堆：     各线程共享，存放类实例，数组对象等。
方法区：    各线程共享 ，存放类的结构信息 例如：运行时常量池，字段和方法属性，构造函数和普通方法的字节码内容。方法区在虚拟机启动时候创建。
运行时常量池：   class文件中每一个类或接口的常量池表的运行时表现形式。它包含了若干种不同的常量，从编译期可知的数值字面量到必须在运行期解析后才能获得
的方法和字段引用，类似于传统语言的符号表（symbol table）.
本地方法栈：     支持native方法的执行。
栈帧：     用来存储数据和部分过程结果的数据结构，同时也用来处理动态链接，方法返回值和异常分派。随着方法调用而创建，随着方法结束而销毁。每一个栈帧都有
自己的本地变量表，操作数栈，和指向当前方法所属的类的运行时常量池的引用。


动态链接：    在class文件里，一个方法若要调用其他方法，或者访问成员变量，则需要通过符号引用来表示，动态链接的作用就是将这些符号引用所表示的方法转换为
实际方法的直接引用。类加载的过程中将要解析尚未被解析的符号引用，并且将对变量的访问转化为变量在程度运行时，位于存储结构中的正确偏移量。
